<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:component-scan base-package="com.citigroup.gftp"/>
    <context:property-placeholder properties-ref="mongoconfig" ignore-unresolvable="true" />
    <util:properties id="entityToCollectionMappings" location="classpath:collection-mapping.properties"/>       

    <!-- Mongo Configurations -->
    <util:properties id="mongoconfig" location="classpath:mongo-config.properties" />
    <bean id="datePattern" class="java.lang.String">
        <constructor-arg value="${mongodb.server.datepattern}"/>
    </bean>
    <bean id="readPreference"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.mongodb.ReadPreference.nearest" />
    </bean>
    <bean id="mappingContext"
        class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />
    <bean id="mongoConversionPattern" class="java.lang.String">
        <constructor-arg value="${mongodb.server.datepattern}" />
    </bean>
    <bean id="defaultMongoTypeMapper"
        class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
        <constructor-arg name="typeKey">
            <null />
        </constructor-arg>
    </bean>
    <mongo:mapping-converter id="mappingMongoConverter"
        db-factory-ref="mongoDbFactory" mapping-context-ref="mappingContext"
        type-mapper-ref="defaultMongoTypeMapper">
        <mongo:custom-converters
            base-package="com.citigroup.gftp.spring.mongo.converters" />
    </mongo:mapping-converter>
    <mongo:mongo id="mongoClient" replica-set="${mongodb.replica.set}"
        write-concern="MAJORITY">
        <mongo:options auto-connect-retry="true" slave-ok="true"
            write-timeout="${mongodb.write.timeout}" socket-keep-alive="true"
            connect-timeout="${mongodb.connect.timeout}" 
            connections-per-host="${mongodb.conns.perhost}" />
    </mongo:mongo>
    <mongo:db-factory id="mongoDbFactory" dbname="${mongodb.server.dbname}"
        username="${mongodb.server.username}" password="${mongodb.server.password}"
        mongo-ref="mongoClient" write-concern="MAJORITY" />
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
        <constructor-arg name="mongoConverter" ref="mappingMongoConverter" />
        <property name="readPreference" ref="readPreference" />
    </bean>
    
    <!--  Set-up custom mongo repositories -->
    <mongo:repositories base-package="com.citigroup.gftp.spring.mongo.repositories" 
       mongo-template-ref="mongoTemplate" factory-class="com.citigroup.gftp.spring.mongo.repositories.CustomMongoRepositoryFactoryBean"/>

    <!-- Job Definition -->
    <batch:job id="fileImportJob" job-repository="mongoJobRepository">
        <batch:step id="filedump">
            <batch:tasklet task-executor="syncTaskExecutor" throttle-limit="10" transaction-manager="transactionManager">
                <batch:chunk commit-interval="10" reader="itemReader" writer="itemWriter"/>
                <!-- 
                <batch:listeners>
                    <batch:listener ref="notificationExecutionsListener"/>
                </batch:listeners>
                 -->
            </batch:tasklet>
        </batch:step>
    </batch:job>
    
    <!-- Task Executors -->
    <bean id="asyncTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
    
    <bean id="syncTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor"/>
    
    <!-- Item Reader for CSV File -->
    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
        scope="step">
      <property name="resource" value="file:///#{jobParameters['input.file.name']}"/>
      <property name="lineMapper" ref="csvLineMapper"/>
    </bean>

    <!-- Item Reader helpers -->
    <bean id="contract" class="com.citigroup.gftp.spring.da.domain.Contract" scope="prototype" />    

    <bean id="commaDelimitedTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="names" value="lvcode,ccycode,productcode,valuedate,maturitydate,amount,installmentamt,rate,tprate" />
    </bean>
    
    <bean id="beanWrapperFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper" >
        <property name="prototypeBeanName" value="contract" />
    </bean>
    
    <bean id="csvLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer" ref="commaDelimitedTokenizer"/>
        <property name="fieldSetMapper" ref="beanWrapperFieldSetMapper"/>
    </bean>

    <!-- Mongo Item Writer -->
    <bean id="itemWriter" class="org.springframework.batch.item.data.MongoItemWriter">
        <property name="collection" value="deals"/>
        <property name="template" ref="mongoTemplate"/>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
    
    <!-- ID Incrementers - Used by Job Repository implementation -->
    <bean id="stepExecIdIncrementer" factory-bean="mongoFieldMaxValueIncrementerFactory" factory-method="getIncrementer">
        <constructor-arg><value>mongodb</value></constructor-arg>
        <constructor-arg><value>stepExecId</value></constructor-arg>
    </bean>
    
    <bean id="jobExecIdIncrementer" factory-bean="mongoFieldMaxValueIncrementerFactory" factory-method="getIncrementer">
        <constructor-arg><value>mongodb</value></constructor-arg>
        <constructor-arg><value>jobExecId</value></constructor-arg>
    </bean>
    
    <!-- Launcher to start the job -->
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="mongoJobRepository"/>
        <property name="taskExecutor" ref="syncTaskExecutor"/>
    </bean>
</beans>
